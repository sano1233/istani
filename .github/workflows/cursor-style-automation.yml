name: Cursor-Style AI Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  ai-code-check-and-fix:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build project
        run: mvn clean compile
        continue-on-error: false

      - name: Run tests (continue on error)
        run: mvn test
        continue-on-error: true

      - name: Download Google Java Format
        run: |
          wget https://github.com/google/google-java-format/releases/download/v1.19.2/google-java-format-1.19.2-all-deps.jar
          chmod +x google-java-format-1.19.2-all-deps.jar

      - name: Auto-fix Java formatting with Google Java Format
        run: |
          if [ -d "src" ]; then
            find src -name "*.java" -print0 | while IFS= read -r -d '' file; do
              java -jar google-java-format-1.19.2-all-deps.jar --replace "$file" || true
            done
          else
            echo "No src directory found, skipping Java formatting"
          fi

      - name: Run SpotBugs for security/bug detection
        run: mvn spotbugs:check
        continue-on-error: true

      - name: Apply Spotless formatting
        run: mvn spotless:apply
        continue-on-error: true

      - name: Check for changes
        id: git-check
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit auto-fixes
        if: steps.git-check.outputs.has_changes == 'true'
        run: |
          git add -A
          git commit -m "Auto-fix: Apply code formatting and fixes [bot]"
          git push

      - name: Re-run tests after fixes
        if: steps.git-check.outputs.has_changes == 'true'
        run: mvn test

      - name: Enable auto-merge
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --auto --squash || echo "Auto-merge could not be enabled (may require admin setup)"

  code-quality-gate:
    runs-on: ubuntu-latest
    needs: ai-code-check-and-fix
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run verify
        run: mvn verify

      - name: Run PMD check
        run: mvn pmd:check

      - name: Run Checkstyle check
        run: mvn checkstyle:check

  # Separate job for push to main
  main-branch-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test
        run: |
          mvn clean compile
          mvn test
          mvn verify
