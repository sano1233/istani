version: '3.8'

services:
  ai-agent:
    build:
      context: ..
      dockerfile: ai-agent/Dockerfile
    container_name: istani-ai-agent
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_OWNER=${GITHUB_OWNER:-sano1233}
      - GITHUB_REPO=${GITHUB_REPO:-istani}
      - VERCEL_TOKEN=${VERCEL_TOKEN}
      - NETLIFY_TOKEN=${NETLIFY_TOKEN}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
    volumes:
      - ./logs:/app/logs
      - ~/.gitconfig:/home/aiagent/.gitconfig:ro
    networks:
      - ai-agent-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching and queue management
  redis:
    image: redis:7-alpine
    container_name: istani-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ai-agent-network
    command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: istani-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - ai-agent-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: istani-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - ai-agent-network
    depends_on:
      - prometheus

networks:
  ai-agent-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
